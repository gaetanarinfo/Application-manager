"""
Django settings for web_project project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["app.portfolio-gaetan.fr", "31.33.145.219"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_assets",
    "bootstrap5",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "web_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "libraries": {
                "poll_extras": "manager.templatetags.poll_extras",
            },
        },
    },
]

WSGI_APPLICATION = "web_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASE_ROUTERS = [
    "routers.db_routers.AuthRouter",
    "routers.db_routers.PortfolioRouter",
]

DATABASES = {
    "default": {},
    "auth_db": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "portfolio-django",
        "USER": os.environ.get("DB1_USER"),
        "PASSWORD": os.environ.get("DB1_PASSWORD"),
        "HOST": os.environ.get("DB_ADRESS"),
        "PORT": os.environ.get("DB_PORT"),
    },
    "portfolio_db": {
        "NAME": "portfolio",
        "ENGINE": "django.db.backends.mysql",
        "USER": os.environ.get("DB2_USER"),
        "PASSWORD": os.environ.get("DB2_PASSWORD"),
        "HOST": os.environ.get("DB_ADRESS"),
        "PORT": os.environ.get("DB_PORT"),
    },
    "lep_db": {
        "NAME": "lep",
        "ENGINE": "django.db.backends.mysql",
        "USER": os.environ.get("DB3_USER"),
        "PASSWORD": os.environ.get("DB3_PASSWORD"),
        "HOST": os.environ.get("DB_ADRESS"),
        "PORT": os.environ.get("DB_PORT"),
    },
    "mybakery_db": {
        "NAME": "mybakery",
        "ENGINE": "django.db.backends.mysql",
        "USER": os.environ.get("DB4_USER"),
        "PASSWORD": os.environ.get("DB4_PASSWORD"),
        "HOST": os.environ.get("DB_ADRESS"),
        "PORT": os.environ.get("DB_PORT"),
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "fr-fr"

TIME_ZONE = "Europe/Paris"

USE_I18N = True
USE_L10N = True
USE_TZ = True

SHORT_DATETIME_FORMAT = "d-m-Y H:i:s"
SHORT_DATE_FORMAT = "d-m-Y"
TIME_FORMAT = "H:i:s"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
APPEND_SLASH = False

CORS_ORIGIN_WHITELIST = ()

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = (
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
)

STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
